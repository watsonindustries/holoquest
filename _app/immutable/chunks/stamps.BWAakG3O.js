import{w as N}from"./index.CMiOHy2r.js";var p={local:{},session:{}};function O(t){return t==="local"?localStorage:sessionStorage}function z(t,u,P){var f,w,g,v,m,b,h,S;const d=(f=void 0)!=null?f:JSON,s=(w=void 0)!=null?w:"local",I=(g=void 0)!=null?g:!0,L=(m=(v=void 0)!=null?v:void 0)!=null?m:e=>console.error(`Error when writing value from persisted store "${t}" to ${s}`,e),_=(b=void 0)!=null?b:(e,o)=>console.error(`Error when parsing ${e?'"'+e+'"':"value"} from persisted store "${t}"`,o),E=(h=void 0)!=null?h:e=>e,y=(S=void 0)!=null?S:e=>e,V=typeof window<"u"&&typeof document<"u",c=V?O(s):null;function $(e,o){const l=y(o);try{c==null||c.setItem(e,d.stringify(l))}catch(i){L(i)}}function T(){function e(r){try{return d.parse(r)}catch(a){_(r,a)}}const o=c==null?void 0:c.getItem(t);if(o==null)return u;const l=e(o);return l==null?u:E(l)}if(!p[s][t]){const e=T(),o=N(e,r=>{if(V&&s=="local"&&I){const a=n=>{if(n.key===t&&n.newValue){let x;try{x=d.parse(n.newValue)}catch(J){_(n.newValue,J);return}const W=E(x);r(W)}};return window.addEventListener("storage",a),()=>window.removeEventListener("storage",a)}}),{subscribe:l,set:i}=o;p[s][t]={set(r){i(r),$(t,r)},update(r){return o.update(a=>{const n=r(a);return $(t,n),n})},reset(){this.set(u)},subscribe:l}}return p[s][t]}const j=z("collected-stamps",{}),q=z("expected-stamps",{});export{j as c,q as e};
