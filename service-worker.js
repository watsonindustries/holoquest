const o=location.pathname.split("/").slice(0,-1).join("/"),te=[o+"/_app/immutable/entry/app.bR8uXtay.js",o+"/_app/immutable/nodes/0.C4U6_xCB.js",o+"/_app/immutable/assets/0.D_v2mSLT.css",o+"/_app/immutable/nodes/1.CJB_Rf3c.js",o+"/_app/immutable/nodes/2.Df98kqxI.js",o+"/_app/immutable/assets/watamesmug.ay_qIBLZ.jpg",o+"/_app/immutable/nodes/3.DG3IAGAA.js",o+"/_app/immutable/nodes/4.BmunKbJ6.js",o+"/_app/immutable/nodes/5.xYaUnv_x.js",o+"/_app/immutable/nodes/6.DA1rhjqE.js",o+"/_app/immutable/nodes/7.B1yHGWBd.js",o+"/_app/immutable/nodes/8.CFrGMgWB.js",o+"/_app/immutable/chunks/browser.BImCA5dO.js",o+"/_app/immutable/chunks/const.CGFi_4Hk.js",o+"/_app/immutable/chunks/control.CYgJF_JY.js",o+"/_app/immutable/chunks/custom.DgUHssZa.js",o+"/_app/immutable/chunks/each.D6YF6ztN.js",o+"/_app/immutable/chunks/entry.Dt5yaqTq.js",o+"/_app/immutable/chunks/environment.BebWth51.js",o+"/_app/immutable/chunks/index.B6cPi1aI.js",o+"/_app/immutable/chunks/index.BAW8cGS1.js",o+"/_app/immutable/chunks/index.BRjTsfqn.js",o+"/_app/immutable/chunks/index.C09ETEga.js",o+"/_app/immutable/chunks/index.JfS3gpwJ.js",o+"/_app/immutable/chunks/index.g5YcAAdQ.js",o+"/_app/immutable/chunks/preload-helper.D6kgxu3v.js",o+"/_app/immutable/chunks/qr-scanner.min.4zogFLvw.js",o+"/_app/immutable/chunks/scheduler.BFm2QQji.js",o+"/_app/immutable/chunks/stamps.B7u3iYP7.js",o+"/_app/immutable/chunks/stamps.CTP00fdk.js",o+"/_app/immutable/chunks/toasts.BxjjKmbh.js",o+"/_app/immutable/chunks/userinfo.D_LcDA1U.js",o+"/_app/immutable/entry/start.E9cLrI6q.js",o+"/_app/immutable/chunks/qr-scanner-worker.min.D85Z9gVD.js"],se=[o+"/android/android-launchericon-144-144.png",o+"/android/android-launchericon-192-192.png",o+"/android/android-launchericon-48-48.png",o+"/android/android-launchericon-512-512.png",o+"/android/android-launchericon-72-72.png",o+"/android/android-launchericon-96-96.png",o+"/favicon.ico",o+"/fonts/Geologica.ttf",o+"/icons/apple-touch-icon.png",o+"/icons/favicon-16x16.png",o+"/icons/favicon-32x32.png",o+"/ios/100.png",o+"/ios/1024.png",o+"/ios/114.png",o+"/ios/120.png",o+"/ios/128.png",o+"/ios/144.png",o+"/ios/152.png",o+"/ios/16.png",o+"/ios/167.png",o+"/ios/180.png",o+"/ios/192.png",o+"/ios/20.png",o+"/ios/256.png",o+"/ios/29.png",o+"/ios/32.png",o+"/ios/40.png",o+"/ios/50.png",o+"/ios/512.png",o+"/ios/57.png",o+"/ios/58.png",o+"/ios/60.png",o+"/ios/64.png",o+"/ios/72.png",o+"/ios/76.png",o+"/ios/80.png",o+"/ios/87.png",o+"/manifest.json",o+"/robots.txt"],ne=[],G="1719181752187";try{self["workbox:core:7.0.0"]&&_()}catch{}const ae=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},re=ae;class h extends Error{constructor(e,t){const s=re(e,t);super(s),this.name=e,this.details=t}}const ie=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),""),oe=(n,e)=>e.some(t=>n instanceof t);let A,M;function ce(){return A||(A=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function ue(){return M||(M=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const $=new WeakMap,T=new WeakMap,J=new WeakMap,v=new WeakMap,S=new WeakMap;function le(n){const e=new Promise((t,s)=>{const a=()=>{n.removeEventListener("success",r),n.removeEventListener("error",i)},r=()=>{t(y(n.result)),a()},i=()=>{s(n.error),a()};n.addEventListener("success",r),n.addEventListener("error",i)});return e.then(t=>{t instanceof IDBCursor&&$.set(t,n)}).catch(()=>{}),S.set(e,n),e}function he(n){if(T.has(n))return;const e=new Promise((t,s)=>{const a=()=>{n.removeEventListener("complete",r),n.removeEventListener("error",i),n.removeEventListener("abort",i)},r=()=>{t(),a()},i=()=>{s(n.error||new DOMException("AbortError","AbortError")),a()};n.addEventListener("complete",r),n.addEventListener("error",i),n.addEventListener("abort",i)});T.set(n,e)}let U={get(n,e,t){if(n instanceof IDBTransaction){if(e==="done")return T.get(n);if(e==="objectStoreNames")return n.objectStoreNames||J.get(n);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return y(n[e])},set(n,e,t){return n[e]=t,!0},has(n,e){return n instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in n}};function de(n){U=n(U)}function fe(n){return n===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(e,...t){const s=n.call(L(this),e,...t);return J.set(s,e.sort?e.sort():[e]),y(s)}:ue().includes(n)?function(...e){return n.apply(L(this),e),y($.get(this))}:function(...e){return y(n.apply(L(this),e))}}function pe(n){return typeof n=="function"?fe(n):(n instanceof IDBTransaction&&he(n),oe(n,ce())?new Proxy(n,U):n)}function y(n){if(n instanceof IDBRequest)return le(n);if(v.has(n))return v.get(n);const e=pe(n);return e!==n&&(v.set(n,e),S.set(e,n)),e}const L=n=>S.get(n);function ge(n,e,{blocked:t,upgrade:s,blocking:a,terminated:r}={}){const i=indexedDB.open(n,e),c=y(i);return s&&i.addEventListener("upgradeneeded",u=>{s(y(i.result),u.oldVersion,u.newVersion,y(i.transaction),u)}),t&&i.addEventListener("blocked",u=>t(u.oldVersion,u.newVersion,u)),c.then(u=>{r&&u.addEventListener("close",()=>r()),a&&u.addEventListener("versionchange",l=>a(l.oldVersion,l.newVersion,l))}).catch(()=>{}),c}const ye=["get","getKey","getAll","getAllKeys","count"],me=["put","add","delete","clear"],I=new Map;function O(n,e){if(!(n instanceof IDBDatabase&&!(e in n)&&typeof e=="string"))return;if(I.get(e))return I.get(e);const t=e.replace(/FromIndex$/,""),s=e!==t,a=me.includes(t);if(!(t in(s?IDBIndex:IDBObjectStore).prototype)||!(a||ye.includes(t)))return;const r=async function(i,...c){const u=this.transaction(i,a?"readwrite":"readonly");let l=u.store;return s&&(l=l.index(c.shift())),(await Promise.all([l[t](...c),a&&u.done]))[0]};return I.set(e,r),r}de(n=>({...n,get:(e,t,s)=>O(e,t)||n.get(e,t,s),has:(e,t)=>!!O(e,t)||n.has(e,t)}));try{self["workbox:background-sync:7.0.0"]&&_()}catch{}const F=3,we="workbox-background-sync",f="requests",w="queueName";class _e{constructor(){this._db=null}async addEntry(e){const s=(await this.getDb()).transaction(f,"readwrite",{durability:"relaxed"});await s.store.add(e),await s.done}async getFirstEntryId(){const t=await(await this.getDb()).transaction(f).store.openCursor();return t==null?void 0:t.value.id}async getAllEntriesByQueueName(e){const s=await(await this.getDb()).getAllFromIndex(f,w,IDBKeyRange.only(e));return s||new Array}async getEntryCountByQueueName(e){return(await this.getDb()).countFromIndex(f,w,IDBKeyRange.only(e))}async deleteEntry(e){await(await this.getDb()).delete(f,e)}async getFirstEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"next")}async getLastEntryByQueueName(e){return await this.getEndEntryFromIndex(IDBKeyRange.only(e),"prev")}async getEndEntryFromIndex(e,t){const a=await(await this.getDb()).transaction(f).store.index(w).openCursor(e,t);return a==null?void 0:a.value}async getDb(){return this._db||(this._db=await ge(we,F,{upgrade:this._upgradeDb})),this._db}_upgradeDb(e,t){t>0&&t<F&&e.objectStoreNames.contains(f)&&e.deleteObjectStore(f),e.createObjectStore(f,{autoIncrement:!0,keyPath:"id"}).createIndex(w,w,{unique:!1})}}class be{constructor(e){this._queueName=e,this._queueDb=new _e}async pushEntry(e){delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async unshiftEntry(e){const t=await this._queueDb.getFirstEntryId();t?e.id=t-1:delete e.id,e.queueName=this._queueName,await this._queueDb.addEntry(e)}async popEntry(){return this._removeEntry(await this._queueDb.getLastEntryByQueueName(this._queueName))}async shiftEntry(){return this._removeEntry(await this._queueDb.getFirstEntryByQueueName(this._queueName))}async getAll(){return await this._queueDb.getAllEntriesByQueueName(this._queueName)}async size(){return await this._queueDb.getEntryCountByQueueName(this._queueName)}async deleteEntry(e){await this._queueDb.deleteEntry(e)}async _removeEntry(e){return e&&await this.deleteEntry(e.id),e}}const Re=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class k{static async fromRequest(e){const t={url:e.url,headers:{}};e.method!=="GET"&&(t.body=await e.clone().arrayBuffer());for(const[s,a]of e.headers.entries())t.headers[s]=a;for(const s of Re)e[s]!==void 0&&(t[s]=e[s]);return new k(t)}constructor(e){e.mode==="navigate"&&(e.mode="same-origin"),this._requestData=e}toObject(){const e=Object.assign({},this._requestData);return e.headers=Object.assign({},this._requestData.headers),e.body&&(e.body=e.body.slice(0)),e}toRequest(){return new Request(this._requestData.url,this._requestData)}clone(){return new k(this.toObject())}}const W="workbox-background-sync",Ce=60*24*7,x=new Set,H=n=>{const e={request:new k(n.requestData).toRequest(),timestamp:n.timestamp};return n.metadata&&(e.metadata=n.metadata),e};class ke{constructor(e,{forceSyncFallback:t,onSync:s,maxRetentionTime:a}={}){if(this._syncInProgress=!1,this._requestsAddedDuringSync=!1,x.has(e))throw new h("duplicate-queue-name",{name:e});x.add(e),this._name=e,this._onSync=s||this.replayRequests,this._maxRetentionTime=a||Ce,this._forceSyncFallback=!!t,this._queueStore=new be(this._name),this._addSyncListener()}get name(){return this._name}async pushRequest(e){await this._addRequest(e,"push")}async unshiftRequest(e){await this._addRequest(e,"unshift")}async popRequest(){return this._removeRequest("pop")}async shiftRequest(){return this._removeRequest("shift")}async getAll(){const e=await this._queueStore.getAll(),t=Date.now(),s=[];for(const a of e){const r=this._maxRetentionTime*60*1e3;t-a.timestamp>r?await this._queueStore.deleteEntry(a.id):s.push(H(a))}return s}async size(){return await this._queueStore.size()}async _addRequest({request:e,metadata:t,timestamp:s=Date.now()},a){const i={requestData:(await k.fromRequest(e.clone())).toObject(),timestamp:s};switch(t&&(i.metadata=t),a){case"push":await this._queueStore.pushEntry(i);break;case"unshift":await this._queueStore.unshiftEntry(i);break}this._syncInProgress?this._requestsAddedDuringSync=!0:await this.registerSync()}async _removeRequest(e){const t=Date.now();let s;switch(e){case"pop":s=await this._queueStore.popEntry();break;case"shift":s=await this._queueStore.shiftEntry();break}if(s){const a=this._maxRetentionTime*60*1e3;return t-s.timestamp>a?this._removeRequest(e):H(s)}else return}async replayRequests(){let e;for(;e=await this.shiftRequest();)try{await fetch(e.request.clone())}catch{throw await this.unshiftRequest(e),new h("queue-replay-failed",{name:this._name})}}async registerSync(){if("sync"in self.registration&&!this._forceSyncFallback)try{await self.registration.sync.register(`${W}:${this._name}`)}catch{}}_addSyncListener(){"sync"in self.registration&&!this._forceSyncFallback?self.addEventListener("sync",e=>{if(e.tag===`${W}:${this._name}`){const t=async()=>{this._syncInProgress=!0;let s;try{await this._onSync({queue:this})}catch(a){if(a instanceof Error)throw s=a,s}finally{this._requestsAddedDuringSync&&!(s&&!e.lastChance)&&await this.registerSync(),this._syncInProgress=!1,this._requestsAddedDuringSync=!1}};e.waitUntil(t())}}):this._onSync({queue:this})}static get _queueNames(){return x}}class Ee{constructor(e,t){this.fetchDidFail=async({request:s})=>{await this._queue.pushRequest({request:s})},this._queue=new ke(e,t)}}try{self["workbox:navigation-preload:7.0.0"]&&_()}catch{}function De(){return!!(self.registration&&self.registration.navigationPreload)}function qe(n){De()&&self.addEventListener("activate",e=>{e.waitUntil(self.registration.navigationPreload.enable().then(()=>{}))})}const p={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},P=n=>[p.prefix,n,p.suffix].filter(e=>e&&e.length>0).join("-"),ve=n=>{for(const e of Object.keys(p))n(e)},N={updateDetails:n=>{ve(e=>{typeof n[e]=="string"&&(p[e]=n[e])})},getGoogleAnalyticsName:n=>n||P(p.googleAnalytics),getPrecacheName:n=>n||P(p.precache),getPrefix:()=>p.prefix,getRuntimeName:n=>n||P(p.runtime),getSuffix:()=>p.suffix};function Q(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const Le="__WB_REVISION__";function Ie(n){if(!n)throw new h("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const r=new URL(n,location.href);return{cacheKey:r.href,url:r.href}}const{revision:e,url:t}=n;if(!t)throw new h("add-to-cache-list-unexpected-type",{entry:n});if(!e){const r=new URL(t,location.href);return{cacheKey:r.href,url:r.href}}const s=new URL(t,location.href),a=new URL(t,location.href);return s.searchParams.set(Le,e),{cacheKey:s.href,url:a.href}}class xe{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;s?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return s}}}class Pe{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const a=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let b;function je(){if(b===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),b=!0}catch{b=!1}b=!1}return b}async function Te(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new h("cross-origin-copy-response",{origin:t});const s=n.clone(),r={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=je()?s.body:await s.blob();return new Response(i,r)}function V(n,e){const t=new URL(n);for(const s of e)t.searchParams.delete(s);return t.href}async function Ue(n,e,t,s){const a=V(e.url,t);if(e.url===a)return n.match(e,s);const r=Object.assign(Object.assign({},s),{ignoreSearch:!0}),i=await n.keys(e,r);for(const c of i){const u=V(c.url,t);if(a===u)return n.match(c,s)}}class Se{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const Ne=new Set;async function Be(){for(const n of Ne)await n()}function z(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function E(n){return typeof n=="string"?new Request(n):n}class Ke{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new Se,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=E(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const i=await t.preloadResponse;if(i)return i}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const i of this.iterateCallbacks("requestWillFetch"))s=await i({request:s.clone(),event:t})}catch(i){if(i instanceof Error)throw new h("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const r=s.clone();try{let i;i=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const c of this.iterateCallbacks("fetchDidSucceed"))i=await c({event:t,request:r,response:i});return i}catch(i){throw a&&await this.runCallbacks("fetchDidFail",{error:i,event:t,originalRequest:a.clone(),request:r.clone()}),i}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=E(e);let s;const{cacheName:a,matchOptions:r}=this._strategy,i=await this.getCacheKey(t,"read"),c=Object.assign(Object.assign({},r),{cacheName:a});s=await caches.match(i,c);for(const u of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await u({cacheName:a,matchOptions:r,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,t){const s=E(e);await z(0);const a=await this.getCacheKey(s,"write");if(!t)throw new h("cache-put-with-no-response",{url:ie(a.url)});const r=await this._ensureResponseSafeToCache(t);if(!r)return!1;const{cacheName:i,matchOptions:c}=this._strategy,u=await self.caches.open(i),l=this.hasCallback("cacheDidUpdate"),m=l?await Ue(u,a.clone(),["__WB_REVISION__"],c):null;try{await u.put(a,l?r.clone():r)}catch(d){if(d instanceof Error)throw d.name==="QuotaExceededError"&&await Be(),d}for(const d of this.iterateCallbacks("cacheDidUpdate"))await d({cacheName:i,oldResponse:m,newResponse:r.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const r of this.iterateCallbacks("cacheKeyWillBeUsed"))a=E(await r({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield r=>{const i=Object.assign(Object.assign({},r),{state:s});return t[e](i)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class Y{constructor(e={}){this.cacheName=N.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,r=new Ke(this,{event:t,request:s,params:a}),i=this._getResponse(r,s,t),c=this._awaitComplete(i,r,s,t);return[i,c]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new h("no-response",{url:t.url})}catch(r){if(r instanceof Error){for(const i of e.iterateCallbacks("handlerDidError"))if(a=await i({error:r,event:s,request:t}),a)break}if(!a)throw r}for(const r of e.iterateCallbacks("handlerWillRespond"))a=await r({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let r,i;try{r=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:r}),await t.doneWaiting()}catch(c){c instanceof Error&&(i=c)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:r,error:i}),t.destroy(),i)throw i}}class g extends Y{constructor(e={}){e.cacheName=N.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(this._fallbackToNetwork){const r=a.integrity,i=e.integrity,c=!i||i===r;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?i||r:void 0})),r&&c&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new h("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new h("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==g.copyRedirectedCacheableResponsesPlugin&&(a===g.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);t===0?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};g.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await Te(n):n}};class Ae{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:N.getPrecacheName(e),plugins:[...t,new Pe({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:a,url:r}=Ie(s),i=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(r)&&this._urlsToCacheKeys.get(r)!==a)throw new h("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(r),secondEntry:a});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==s.integrity)throw new h("add-to-cache-list-conflicting-integrities",{url:r});this._cacheKeysToIntegrities.set(a,s.integrity)}if(this._urlsToCacheKeys.set(r,a),this._urlsToCacheModes.set(r,i),t.length>0){const c=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(c)}}}install(e){return Q(e,async()=>{const t=new xe;this.strategy.plugins.push(t);for(const[r,i]of this._urlsToCacheKeys){const c=this._cacheKeysToIntegrities.get(i),u=this._urlsToCacheModes.get(r),l=new Request(r,{integrity:c,cache:u,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:i},request:l,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}})}activate(e){return Q(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),r=[];for(const i of s)a.has(i.url)||(await t.delete(i),r.push(i.url));return{deletedURLs:r}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new h("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let j;const X=()=>(j||(j=new Ae),j);try{self["workbox:routing:7.0.0"]&&_()}catch{}const Z="GET",D=n=>n&&typeof n=="object"?n:{handle:n};class C{constructor(e,t,s=Z){this.handler=D(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=D(e)}}class Me extends C{constructor(e,t,s){const a=({url:r})=>{const i=e.exec(r.href);if(i&&!(r.origin!==location.origin&&i.index!==0))return i.slice(1)};super(a,t,s)}}class Oe{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const r=new Request(...a);return this.handleRequest({request:r,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let c=i&&i.handler;const u=e.method;if(!c&&this._defaultHandlerMap.has(u)&&(c=this._defaultHandlerMap.get(u)),!c)return;let l;try{l=c.handle({url:s,request:e,event:t,params:r})}catch(d){l=Promise.reject(d)}const m=i&&i.catchHandler;return l instanceof Promise&&(this._catchHandler||m)&&(l=l.catch(async d=>{if(m)try{return await m.handle({url:s,request:e,event:t,params:r})}catch(K){K instanceof Error&&(d=K)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw d})),l}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const r=this._routes.get(s.method)||[];for(const i of r){let c;const u=i.match({url:e,sameOrigin:t,request:s,event:a});if(u)return c=u,(Array.isArray(c)&&c.length===0||u.constructor===Object&&Object.keys(u).length===0||typeof u=="boolean")&&(c=void 0),{route:i,params:c}}return{}}setDefaultHandler(e,t=Z){this._defaultHandlerMap.set(t,D(e))}setCatchHandler(e){this._catchHandler=D(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new h("unregister-route-route-not-registered")}}let R;const Fe=()=>(R||(R=new Oe,R.addFetchListener(),R.addCacheListener()),R);function B(n,e,t){let s;if(typeof n=="string"){const r=new URL(n,location.href),i=({url:c})=>c.href===r.href;s=new C(i,e,t)}else if(n instanceof RegExp)s=new Me(n,e,t);else if(typeof n=="function")s=new C(n,e,t);else if(n instanceof C)s=n;else throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return Fe().registerRoute(s),s}function We(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(s=>s.test(t))&&n.searchParams.delete(t);return n}function*He(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const r=new URL(n,location.href);r.hash="",yield r.href;const i=We(r,e);if(yield i.href,t&&i.pathname.endsWith("/")){const c=new URL(i.href);c.pathname+=t,yield c.href}if(s){const c=new URL(i.href);c.pathname+=".html",yield c.href}if(a){const c=a({url:r});for(const u of c)yield u.href}}class Qe extends C{constructor(e,t){const s=({request:a})=>{const r=e.getURLsToCacheKeys();for(const i of He(a.url,t)){const c=r.get(i);if(c){const u=e.getIntegrityForCacheKey(c);return{cacheKey:c,integrity:u}}}};super(s,e.strategy)}}function Ve(n){const e=X(),t=new Qe(e,n);B(t)}function Ge(n){X().precache(n)}function $e(n,e){Ge(n),Ve(e)}class Je extends Y{constructor(e={}){super(e),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let s,a;try{const r=[t.fetch(e)];if(this._networkTimeoutSeconds){const i=z(this._networkTimeoutSeconds*1e3);r.push(i)}if(a=await Promise.race(r),!a)throw new Error(`Timed out the network response after ${this._networkTimeoutSeconds} seconds.`)}catch(r){r instanceof Error&&(s=r)}if(!a)throw new h("no-response",{url:e.url,error:s});return a}}const q=self;qe();const ze=[...te,...se,...ne].map(n=>({url:n,revision:G}));$e(ze);const Ye=new Ee("takoRequests",{maxRetentionTime:24*60}),ee=new Je({plugins:[Ye]});B(/\/api\/.*\/*.json/,ee,"POST");B(/\/api\/.*\/*.json/,ee,"PATCH");q.addEventListener("install",n=>{console.log("installing service worker version: ",G),q.skipWaiting()});q.addEventListener("activate",n=>{n.waitUntil(q.clients.claim())});
